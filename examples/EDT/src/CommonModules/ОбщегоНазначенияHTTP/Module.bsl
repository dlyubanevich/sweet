
#Область ПрограммныйИнтерфейс

// Функция записывает произвольные данные в JSON-строку
//	Параметры:
//		Данные - Массив из Структура, Массив из Соответствие, Структура, Соответствие
//		ВариантЗаписиДаты - ВариантЗаписиДатыJSON
//	Возвращаемое значение:
//		Строка	
Функция ЗаписатьДанныеВJSON(Данные, ВариантЗаписиДаты = Неопределено) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	
	НастройкиСериализацииJSON = Неопределено;
	Если ВариантЗаписиДаты <> Неопределено Тогда
		
		НастройкиСериализацииJSON = Новый НастройкиСериализацииJSON;
		НастройкиСериализацииJSON.ВариантЗаписиДаты = ВариантЗаписиДатыJSON.ЛокальнаяДата;
		НастройкиСериализацииJSON.ФорматСериализацииДаты = ФорматДатыJSON.ISO;
			
	КонецЕсли;
		
	ЗаписатьJSON(ЗаписьJSON, Данные, НастройкиСериализацииJSON);
	
	JSON = ЗаписьJSON.Закрыть();

	Возврат JSON;
	
КонецФункции

// Функция генерирует HTTPСервисОтвет по входящим параметрам
//	Параметры:
//		КодСостояния - Число
//		ТелоОтвета - Произвольный
//		ТипОтвета - Строка,Неопределено
//	Возвращаемое значение:
//		HTTPСервисОтвет	
Функция HTTPСервисОтвет(КодСостояния, ТелоОтвета = Неопределено, ТипОтвета = Неопределено) Экспорт
	
	Ответ = Новый HTTPСервисОтвет(КодСостояния);
	Если ТелоОтвета <> Неопределено Тогда
		Если ТипЗнч(ТелоОтвета) = Тип("ДвоичныеДанные") Тогда
			Ответ.УстановитьТелоИзДвоичныхДанных(ТелоОтвета);
		Иначе	
			Ответ.УстановитьТелоИзСтроки(ТелоОтвета);
		КонецЕсли;
	КонецЕсли;
	Если ТипОтвета <> Неопределено Тогда	
		Ответ.Заголовки.Вставить("Content-Type", ТипОтвета);
	КонецЕсли;
		
	Возврат Ответ;
	
КонецФункции	

#КонецОбласти
